使用 Mars 开发环境编写并运行以下 MIPS 汇编程序：



1. 输入长方体的长宽高（三行，每行一个整数），计算并输出其体积与表面积。由于实际意义，长宽高大于零，要求对非法（小于等于 0）的输入进行提示（输出"Illegal Input"）并重新输入。

输入保证各个中间结果和最终结果范围在 [-2147483648, 2147483647] 内



输入1:

11

45

14

输出1:

6930

2558



输入2:

-19

-19

810

19

19

810

输出2:

Illegal Input

292410

62282



2. 输入正整数 n，输出斐波那契数列 F(n) = F(n - 1) + F(n - 2), F(0) = F(1) = 1 的第 n 项 F(n)。输入保证各个中间结果和最终结果范围在 [-2147483648, 2147483647] 内



3. 输入一个非负整数数组（第一行一个整数 n，第之后 n 行每行一个整数），假定你的初始位置为数组第一个下标。数组中的每个元素代表你在那个位置能够向右跳跃的最大长度。约定数组下标从 0 开始，请确认你是否能够跳跃到数组的最后一个下标。

输入保证各个中间结果和最终结果范围在 [-2147483648, 2147483647] 内，n≤1e5

例如：

A = [2, 3, 1, 1, 4]：跳跃顺序为 0 → 1 → 4，能够跳跃到数组的最后一个下标，输出 "True"。

B = [3, 2, 1, 0, 4]：最远只能跳跃到 3 号下标，不能够跳跃到数组的最后一个下标，输出 "False"。



4. 将作业二中的 C 代码翻译为 MIPS 汇编代码（请不要改变嵌套循环的语义）：



int a, b, *D;

for (int i = 0; i < a; i++) for (int j = 0; j < b; j++) D[4*j] = i + j;



其中 a, b, i, j, D 分别位于 $s0, $s1, $t0, $t1, $s2 中。



（注：自行调试时请在代码开头为 a 与 b 赋值，提交时请不要包含对 a 与 b 的赋值）



Mars 工具
Mars 程序见附件，请使用 java -jar Mars.jar 运行。如果没有安装 Java，请下载：https://aka.ms/download-jdk/microsoft-jdk-11.0.12.7.1-windows-x64.msi。



请在 Mars 的 Settings -> Memory Configuration 中选择 Compact, Data at Address 0。



关于 Mars 运行环境中的系统调用（输入输出），请参考 https://courses.missouristate.edu/kenvollmar/mars/help/syscallhelp.html。



提交说明
请将四份含有注释的代码分别命名为 1.asm 到 4.asm 一起使用 ZIP 或 7Z 打包。压缩包中不要有其他文件。请确保以上代码均可直接在 Mars 中运行。